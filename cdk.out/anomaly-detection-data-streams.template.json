{
  "Resources": {
    "outputBucket14BAE956": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/outputBucket/Resource"
      }
    },
    "inputDataStream02E8870B": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "ShardCount": 1,
        "Name": "aws-anomaly-detection-input-data-stream",
        "RetentionPeriodHours": 24,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis"
            }
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/inputDataStream/Resource"
      }
    },
    "deliveryStreamRoleB4288E26": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "kinesis:DescribeStream",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "inputDataStream02E8870B",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/deliveryStreamRole/Resource"
      }
    },
    "deliveryStreamRoleDefaultPolicyC9208632": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "inputDataStream02E8870B",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "outputBucket14BAE956",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "outputBucket14BAE956",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deliveryStreamRoleDefaultPolicyC9208632",
        "Roles": [
          {
            "Ref": "deliveryStreamRoleB4288E26"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/deliveryStreamRole/DefaultPolicy/Resource"
      }
    },
    "anomalyDetectionTopic1A0E5948": {
      "Type": "AWS::SNS::Topic",
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/anomalyDetectionTopic/Resource"
      }
    },
    "dataProcessingFunctionServiceRoleB2FCF3A6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/dataProcessingFunction/ServiceRole/Resource"
      }
    },
    "dataProcessingFunctionServiceRoleDefaultPolicyA0E5FC4B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "anomalyDetectionTopic1A0E5948"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "dataProcessingFunctionServiceRoleDefaultPolicyA0E5FC4B",
        "Roles": [
          {
            "Ref": "dataProcessingFunctionServiceRoleB2FCF3A6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/dataProcessingFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "dataProcessingFunctionDC0052C9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersb9595d1e79bd0ecde7faa6c5c116ac3c209628eef58cad27e6140dfefe4be274S3Bucket3273C3D5"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb9595d1e79bd0ecde7faa6c5c116ac3c209628eef58cad27e6140dfefe4be274S3VersionKey5B7646EF"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb9595d1e79bd0ecde7faa6c5c116ac3c209628eef58cad27e6140dfefe4be274S3VersionKey5B7646EF"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "lambda-handler.main",
        "Role": {
          "Fn::GetAtt": [
            "dataProcessingFunctionServiceRoleB2FCF3A6",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Environment": {
          "Variables": {
            "TOPIC_ARN": {
              "Ref": "anomalyDetectionTopic1A0E5948"
            }
          }
        }
      },
      "DependsOn": [
        "dataProcessingFunctionServiceRoleDefaultPolicyA0E5FC4B",
        "dataProcessingFunctionServiceRoleB2FCF3A6"
      ],
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/dataProcessingFunction/Resource",
        "aws:asset:path": "asset.b9595d1e79bd0ecde7faa6c5c116ac3c209628eef58cad27e6140dfefe4be274",
        "aws:asset:property": "Code"
      }
    },
    "deliveryStream": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "inputDataStream02E8870B",
              "Arn"
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "deliveryStreamRoleB4288E26",
              "Arn"
            ]
          }
        },
        "S3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "outputBucket14BAE956",
              "Arn"
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "deliveryStreamRoleB4288E26",
              "Arn"
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/deliveryStream"
      }
    },
    "anomalieDetectionAppRole16383D2A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "kinesisanalytics.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonKinesisReadOnlyAccess"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "lambda:GetFunctionConfiguration",
                    "lambda:InvokeFunction"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "dataProcessingFunctionDC0052C9",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/anomalieDetectionAppRole/Resource"
      }
    },
    "anomalieDetectionApp": {
      "Type": "AWS::KinesisAnalytics::Application",
      "Properties": {
        "Inputs": [
          {
            "InputSchema": {
              "RecordColumns": [
                {
                  "Mapping": "$.sensor_id",
                  "Name": "sensor_id",
                  "SqlType": "CHAR(30)"
                },
                {
                  "Mapping": "$.temperature",
                  "Name": "temperature",
                  "SqlType": "DOUBLE"
                },
                {
                  "Mapping": "$.co2",
                  "Name": "co2",
                  "SqlType": "DOUBLE"
                },
                {
                  "Mapping": "$.energy_needed",
                  "Name": "energy_needed",
                  "SqlType": "DOUBLE"
                }
              ],
              "RecordFormat": {
                "MappingParameters": {
                  "JSONMappingParameters": {
                    "RecordRowPath": "$"
                  }
                },
                "RecordFormatType": "JSON"
              }
            },
            "KinesisStreamsInput": {
              "ResourceARN": {
                "Fn::GetAtt": [
                  "inputDataStream02E8870B",
                  "Arn"
                ]
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "anomalieDetectionAppRole16383D2A",
                  "Arn"
                ]
              }
            },
            "NamePrefix": "SOURCE_SQL_STREAM"
          }
        ],
        "ApplicationCode": "-- ** Anomaly detection **\n-- Compute an anomaly score for each record in the source stream using Random Cut Forest\n-- Creates a temporary stream and defines a schema\nCREATE OR REPLACE STREAM \"TEMP_STREAM\" (\n   \"sensor_id\"        VARCHAR,\n   \"temperature\"      DOUBLE,\n   \"co2\"              DOUBLE,\n   \"energy_needed\"    DOUBLE,\n   \"ANOMALY_SCORE\"    DOUBLE);\n\n   -- Creates an output stream and defines a schema\nCREATE OR REPLACE STREAM \"PROCESS_STREAM\" (\n   \"sensor_id\"        VARCHAR,\n   \"temperature\"      DOUBLE,\n   \"co2\"              DOUBLE,\n   \"energy_needed\"    DOUBLE,\n   \"ANOMALY_SCORE\"    DOUBLE);\n\n-- Compute an anomaly score for each record in the source stream\n-- using Random Cut Forest\nCREATE OR REPLACE PUMP \"STREAM_PUMP\" AS INSERT INTO \"TEMP_STREAM\"\nSELECT STREAM \"sensor_id\", \"temperature\", \"co2\", \"energy_needed\", \"ANOMALY_SCORE\" FROM\n  TABLE(RANDOM_CUT_FOREST(\n    CURSOR(SELECT STREAM * FROM \"SOURCE_SQL_STREAM_001\")\n  )\n);\n-- Sort records by descending anomaly score, insert into output stream\nCREATE OR REPLACE PUMP \"PROCESS_PUMP\" AS INSERT INTO \"PROCESS_STREAM\"\nSELECT STREAM * FROM \"TEMP_STREAM\"\nWHERE ANOMALY_SCORE > 1.5\nORDER BY FLOOR(\"TEMP_STREAM\".ROWTIME TO SECOND), ANOMALY_SCORE DESC;"
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/anomalieDetectionApp"
      }
    },
    "anomalieDetectionAppOutputLambda": {
      "Type": "AWS::KinesisAnalytics::ApplicationOutput",
      "Properties": {
        "ApplicationName": {
          "Ref": "anomalieDetectionApp"
        },
        "Output": {
          "DestinationSchema": {
            "RecordFormatType": "JSON"
          },
          "LambdaOutput": {
            "ResourceARN": {
              "Fn::GetAtt": [
                "dataProcessingFunctionDC0052C9",
                "Arn"
              ]
            },
            "RoleARN": {
              "Fn::GetAtt": [
                "anomalieDetectionAppRole16383D2A",
                "Arn"
              ]
            }
          },
          "Name": "PROCESS_STREAM"
        }
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/anomalieDetectionAppOutputLambda"
      }
    },
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/Resource"
      }
    },
    "VPCprivateSubnet1SubnetE522290D": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC/privateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/privateSubnet1/Subnet"
      }
    },
    "VPCprivateSubnet1RouteTable41566AF9": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC/privateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/privateSubnet1/RouteTable"
      }
    },
    "VPCprivateSubnet1RouteTableAssociation43FE0C59": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCprivateSubnet1RouteTable41566AF9"
        },
        "SubnetId": {
          "Ref": "VPCprivateSubnet1SubnetE522290D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/privateSubnet1/RouteTableAssociation"
      }
    },
    "VPCprivateSubnet1DefaultRoute68B79172": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCprivateSubnet1RouteTable41566AF9"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCpublicSubnet1NATGatewayEEDEB5A1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/privateSubnet1/DefaultRoute"
      }
    },
    "VPCprivateSubnet2Subnet2F4D9530": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC/privateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/privateSubnet2/Subnet"
      }
    },
    "VPCprivateSubnet2RouteTableBBE8BB2B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC/privateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/privateSubnet2/RouteTable"
      }
    },
    "VPCprivateSubnet2RouteTableAssociation45BBC356": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCprivateSubnet2RouteTableBBE8BB2B"
        },
        "SubnetId": {
          "Ref": "VPCprivateSubnet2Subnet2F4D9530"
        }
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/privateSubnet2/RouteTableAssociation"
      }
    },
    "VPCprivateSubnet2DefaultRouteD808B206": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCprivateSubnet2RouteTableBBE8BB2B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCpublicSubnet1NATGatewayEEDEB5A1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/privateSubnet2/DefaultRoute"
      }
    },
    "VPCpublicSubnet1Subnet325F50B2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/publicSubnet1/Subnet"
      }
    },
    "VPCpublicSubnet1RouteTableF591E248": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/publicSubnet1/RouteTable"
      }
    },
    "VPCpublicSubnet1RouteTableAssociationBFFA43B7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet1RouteTableF591E248"
        },
        "SubnetId": {
          "Ref": "VPCpublicSubnet1Subnet325F50B2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/publicSubnet1/RouteTableAssociation"
      }
    },
    "VPCpublicSubnet1DefaultRoute19059ECD": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet1RouteTableF591E248"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/publicSubnet1/DefaultRoute"
      }
    },
    "VPCpublicSubnet1EIP2D50A06D": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/publicSubnet1/EIP"
      }
    },
    "VPCpublicSubnet1NATGatewayEEDEB5A1": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCpublicSubnet1EIP2D50A06D",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VPCpublicSubnet1Subnet325F50B2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/publicSubnet1/NATGateway"
      }
    },
    "VPCpublicSubnet2Subnet2B2DFF71": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/publicSubnet2/Subnet"
      }
    },
    "VPCpublicSubnet2RouteTable55DAB1BB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/publicSubnet2/RouteTable"
      }
    },
    "VPCpublicSubnet2RouteTableAssociation0849466B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
        },
        "SubnetId": {
          "Ref": "VPCpublicSubnet2Subnet2B2DFF71"
        }
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/publicSubnet2/RouteTableAssociation"
      }
    },
    "VPCpublicSubnet2DefaultRoute9ED4D6BC": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/publicSubnet2/DefaultRoute"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/VPC/VPCGW"
      }
    },
    "producerInstanceRoleC9776AF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/producerInstanceRole/Resource"
      }
    },
    "producerInstanceRoleDefaultPolicy7FCABBDA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "inputDataStream02E8870B",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "producerInstanceRoleDefaultPolicy7FCABBDA",
        "Roles": [
          {
            "Ref": "producerInstanceRoleC9776AF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/producerInstanceRole/DefaultPolicy/Resource"
      }
    },
    "producerInstanceInstanceSecurityGroupDF0C4BFE": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "anomaly-detection-data-streams/producerInstance/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/producerInstance"
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/producerInstance/InstanceSecurityGroup/Resource"
      }
    },
    "producerInstanceInstanceProfile14DF1520": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "producerInstanceRoleC9776AF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/producerInstance/InstanceProfile"
      }
    },
    "producerInstance7DFDF3CC": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "IamInstanceProfile": {
          "Ref": "producerInstanceInstanceProfile14DF1520"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "producerInstanceInstanceSecurityGroupDF0C4BFE",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VPCprivateSubnet1SubnetE522290D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "anomaly-detection-data-streams/producerInstance"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\n yum update -y\n yum install python3 -y\n sudo yum install -y jq\n pip3 install boto3 --user\n pip3 install numpy --user\n curl https://realtime-anomaly-detection-aws.s3.ap-south-1.amazonaws.com/producer/producer.py -o /tmp/producer.py"
        }
      },
      "DependsOn": [
        "producerInstanceRoleDefaultPolicy7FCABBDA",
        "producerInstanceRoleC9776AF2"
      ],
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/producerInstance/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=2.23.0,@aws-cdk/assets=1.77.0,@aws-cdk/aws-applicationautoscaling=1.77.0,@aws-cdk/aws-autoscaling-common=1.77.0,@aws-cdk/aws-cloudwatch=1.77.0,@aws-cdk/aws-codeguruprofiler=1.77.0,@aws-cdk/aws-ec2=1.77.0,@aws-cdk/aws-ecr=1.77.0,@aws-cdk/aws-ecr-assets=1.77.0,@aws-cdk/aws-efs=1.77.0,@aws-cdk/aws-events=1.77.0,@aws-cdk/aws-iam=1.77.0,@aws-cdk/aws-kinesis=1.77.0,@aws-cdk/aws-kinesisanalytics=1.77.0,@aws-cdk/aws-kinesisfirehose=1.77.0,@aws-cdk/aws-kms=1.77.0,@aws-cdk/aws-lambda=1.77.0,@aws-cdk/aws-logs=1.77.0,@aws-cdk/aws-s3=1.77.0,@aws-cdk/aws-s3-assets=1.77.0,@aws-cdk/aws-sns=1.77.0,@aws-cdk/aws-sqs=1.77.0,@aws-cdk/aws-ssm=1.77.0,@aws-cdk/cloud-assembly-schema=1.77.0,@aws-cdk/core=1.77.0,@aws-cdk/cx-api=1.77.0,@aws-cdk/region-info=1.77.0,jsii-runtime=Python/3.8.1"
      },
      "Metadata": {
        "aws:cdk:path": "anomaly-detection-data-streams/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-north-1"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-northwest-1"
          ]
        }
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "AssetParametersb9595d1e79bd0ecde7faa6c5c116ac3c209628eef58cad27e6140dfefe4be274S3Bucket3273C3D5": {
      "Type": "String",
      "Description": "S3 bucket for asset \"b9595d1e79bd0ecde7faa6c5c116ac3c209628eef58cad27e6140dfefe4be274\""
    },
    "AssetParametersb9595d1e79bd0ecde7faa6c5c116ac3c209628eef58cad27e6140dfefe4be274S3VersionKey5B7646EF": {
      "Type": "String",
      "Description": "S3 key for asset version \"b9595d1e79bd0ecde7faa6c5c116ac3c209628eef58cad27e6140dfefe4be274\""
    },
    "AssetParametersb9595d1e79bd0ecde7faa6c5c116ac3c209628eef58cad27e6140dfefe4be274ArtifactHashE9EB9591": {
      "Type": "String",
      "Description": "Artifact hash for asset \"b9595d1e79bd0ecde7faa6c5c116ac3c209628eef58cad27e6140dfefe4be274\""
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    }
  }
}